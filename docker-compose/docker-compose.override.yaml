version: '2.4'
services:
  redis-cache:
    cpus: 1
    mem_limit: '2g'
  redis-store:
    cpus: 1
    mem_limit: '1g'
  zoekt-indexserver-0:
    cpus: 8
    mem_limit: '30g'
  zoekt-webserver-0:
    cpus: 24
    mem_limit: '65g'
  gitserver-0:
    cpus: 6
    mem_limit: '32g'
  searcher-0:
    cpus: 4
    mem_limit: '12g'
  symbols-0:
    cpus: 8
    mem_limit: '16g'
    environment:
      - USE_ROCKSKIP=true
      - ROCKSKIP_MIN_REPO_SIZE_MB=1000
  pgsql:
    cpus: 8
    mem_limit: '32g'
  minio:
    cpus: 0.5
  searcher-1:
    container_name: searcher-1
    image: 'index.docker.io/sourcegraph/searcher:3.40.2@sha256:aa7b277ec4aa867764880ba594dab12c452071b28a58d7db5c4e09994d82d7e1'
    cpus: 4
    mem_limit: '12g'
    environment:
      - 'SRC_FRONTEND_INTERNAL=sourcegraph-frontend-internal:3090'
      - JAEGER_AGENT_HOST=jaeger
    healthcheck:
      test: "wget -q 'http://127.0.0.1:3181/healthz' -O /dev/null || exit 1"
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - 'searcher-1:/mnt/cache'
    networks:
      - sourcegraph
    restart: always
  worker:
    environment:
      - 'SRC_FRONTEND_INTERNAL=sourcegraph-frontend-internal:3090'
      - JAEGER_AGENT_HOST=jaeger
      - 'SRC_GIT_SERVERS=gitserver-0:3178'
      - 'SEARCHER_URL=http://searcher-0:3181 http://searcher-1:3181'
      - 'SYMBOLS_URL=http://symbols-0:3184'
      - 'INDEXED_SEARCH_SERVERS=zoekt-webserver-0:6070'
      - 'GITHUB_BASE_URL=http://github-proxy:3180'
  caddy:
    environment:
      - 'XDG_DATA_HOME=/caddy-storage/data'
      - 'XDG_CONFIG_HOME=/caddy-storage/config'
      - 'SRC_FRONTEND_ADDRESSES=sourcegraph-frontend-0:3080'
      # Uncomment & update this line when using Let's Encrypt or custom HTTPS certificates:
      # - 'SRC_SITE_ADDRESS=ec2-52-35-104-18.us-west-2.compute.amazonaws.com'
      - 'SRC_SITE_ADDRESS=ec2-54-187-70-213.us-west-2.compute.amazonaws.com'
      #
      # Uncomment & update the following line when using HTTPS with Let's Encrypt
      - 'SRC_ACME_EMAIL=beatrix@sourcegraph.com'
    volumes:
      - 'caddy:/caddy-storage'
      #
      # IMPORTANT: if a customer uses a reverse proxy in front of Caddy
      # the configuration files below must be updated to include trusted_proxies
      #
      # Comment out the following line when using HTTPS with either Let's Encrypt or custom certificates
      # - '../caddy/builtins/http.Caddyfile:/etc/caddy/Caddyfile'
      #
      # Uncomment the following line when using HTTPS with Let's Encrypt's staging environment
      # - '../caddy/builtins/https.lets-encrypt-staging.Caddyfile:/etc/caddy/Caddyfile'
      #
      # Uncomment the following line when using HTTPS with Let's Encrypt's production environment
      # IMPORTANT: Strongly recommended to test with the staging configuration above first, see that file for details.
      - '../caddy/builtins/https.lets-encrypt-prod.Caddyfile:/etc/caddy/Caddyfile'
