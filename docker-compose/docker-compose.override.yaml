version: '2.4'
services:
  redis-cache:
    cpus: 1
    mem_limit: '3g'
  redis-store:
    cpus: 1
    mem_limit: '1g'

  # ZOEKT
  zoekt-indexserver-0:
    cpus: 8
    mem_limit: '37g'
  zoekt-indexserver-1:
    container_name: zoekt-indexserver-1
    <<: *indexserver
    cpus: 8
    mem_limit: '37g'
    environment:
      - 'HOSTNAME=zoekt-webserver-1:6070'
      - 'SRC_FRONTEND_INTERNAL=http://sourcegraph-frontend-internal:3090'
    volumes:
      - 'zoekt-1-shared:/data/index'
    hostname: zoekt-indexserver-1
  zoekt-indexserver-2:
    container_name: zoekt-indexserver-2
    <<: *indexserver
    cpus: 8
    mem_limit: '37g'
    environment:
      - 'HOSTNAME=zoekt-webserver-2:6070'
      - 'SRC_FRONTEND_INTERNAL=http://sourcegraph-frontend-internal:3090'
    volumes:
      - 'zoekt-2-shared:/data/index'
    hostname: zoekt-indexserver-2
  zoekt-webserver-0:
    cpus: 18
    mem_limit: '50g'
  zoekt-webserver-1:
    container_name: zoekt-webserver-1
    <<: *webserver
    cpus: 18
    mem_limit: '50g'
    environment:
      - 'HOSTNAME=zoekt-webserver-1:6070'
    volumes:
      - 'zoekt-1-shared:/data/index'
    hostname: zoekt-webserver-1
  zoekt-webserver-2:
    container_name: zoekt-webserver-2
    <<: *webserver
    cpus: 18
    mem_limit: '50g'
    environment:
      - 'HOSTNAME=zoekt-webserver-2:6070'
    volumes:
      - 'zoekt-2-shared:/data/index'
    hostname: zoekt-webserver-2

  # GITSERVER
  gitserver-0:
    cpus: 6
    mem_limit: '35g'
  gitserver-1:
    container_name: gitserver-1
    <<: *gitserver
    cpus: 6
    mem_limit: '35g'
    volumes:
      - 'gitserver-1:/data/repos'
    hostname: gitserver-1
  gitserver-2:
    container_name: gitserver-2
    <<: *gitserver
    cpus: 6
    mem_limit: '35g'
    volumes:
      - 'gitserver-2:/data/repos'
    hostname: gitserver-2

  # SEARCHER
  searcher-0:
    cpus: 18
    mem_limit: '35g'
  searcher-1:
    <<: *searcher
    container_name: searcher-1
    cpus: 18
    mem_limit: '35g'
    volumes:
      - 'searcher-1:/mnt/cache'
  searcher-2:
    <<: *searcher
    container_name: searcher-2
    cpus: 18
    mem_limit: '35g'
    volumes:
      - 'searcher-2:/mnt/cache'
  symbols-0:
    cpus: 6
    mem_limit: '12g'
    environment:
      - USE_ROCKSKIP=true
      - ROCKSKIP_MIN_REPO_SIZE_MB=1000
  pgsql:
    cpus: 4
    mem_limit: '12g'
  minio:
    cpus: 0.5
  sourcegraph-frontend-internal:
    cpus: 4
    mem_limit: '8g'
  
  # FRONTEND
  sourcegraph-frontend-0:
    cpus: 4
    mem_limit: '8g'
  sourcegraph-frontend-1:
    <<: *frontend
    cpus: 4
    mem_limit: '8g'
    container_name: sourcegraph-frontend-1
    volumes:
      - 'sourcegraph-frontend-1:/mnt/cache'
  sourcegraph-frontend-2:
    <<: *frontend
    cpus: 4
    mem_limit: '8g'
    container_name: sourcegraph-frontend-2
    volumes:
      - 'sourcegraph-frontend-2:/mnt/cache'
  
  # CADDY
  caddy:
    environment:
      - 'XDG_DATA_HOME=/caddy-storage/data'
      - 'XDG_CONFIG_HOME=/caddy-storage/config'
      - 'SRC_FRONTEND_ADDRESSES=sourcegraph-frontend-0:3080 sourcegraph-frontend-1:3080 sourcegraph-frontend-2:3080'
      # Uncomment & update this line when using Let's Encrypt or custom HTTPS certificates:
      # - 'SRC_SITE_ADDRESS=ec2-52-35-104-18.us-west-2.compute.amazonaws.com'
      - 'SRC_SITE_ADDRESS=ec2-54-188-66-76.us-west-2.compute.amazonaws.com'
      #
      # Uncomment & update the following line when using HTTPS with Let's Encrypt
      - 'SRC_ACME_EMAIL=beatrix@sourcegraph.com'
    volumes:
      - 'caddy:/caddy-storage'
      #
      # IMPORTANT: if a customer uses a reverse proxy in front of Caddy
      # the configuration files below must be updated to include trusted_proxies
      #
      # Comment out the following line when using HTTPS with either Let's Encrypt or custom certificates
      # - '../caddy/builtins/http.Caddyfile:/etc/caddy/Caddyfile'
      #
      # Uncomment the following line when using HTTPS with Let's Encrypt's staging environment
      # - '../caddy/builtins/https.lets-encrypt-staging.Caddyfile:/etc/caddy/Caddyfile'
      #
      # Uncomment the following line when using HTTPS with Let's Encrypt's production environment
      # IMPORTANT: Strongly recommended to test with the staging configuration above first, see that file for details.
      - '../caddy/builtins/https.lets-encrypt-prod.Caddyfile:/etc/caddy/Caddyfile'
volumes:
  <<: *volumes
  gitserver-1:
  gitserver-2:
  searcher-1:
  searcher-2:
  sourcegraph-frontend-1:
  sourcegraph-frontend-2:
  zoekt-1-shared:
  zoekt-2-shared: